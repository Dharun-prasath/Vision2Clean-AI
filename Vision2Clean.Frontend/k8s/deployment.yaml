# Kubernetes deployment configuration for Vision2Clean AI Frontend
# Production-ready deployment with auto-scaling and monitoring

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vision2clean-frontend
  namespace: vision2clean
  labels:
    app: vision2clean-frontend
    version: v1.0.0
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: vision2clean-frontend
  template:
    metadata:
      labels:
        app: vision2clean-frontend
        version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: ghcr.io/vision2clean/frontend:latest
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        env:
        - name: NODE_ENV
          value: "production"
        - name: ENVIRONMENT
          value: "production"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: vision2clean-frontend-service
  namespace: vision2clean
  labels:
    app: vision2clean-frontend
spec:
  selector:
    app: vision2clean-frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vision2clean-frontend-ingress
  namespace: vision2clean
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/compression-type: "text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://vision2clean.com"
spec:
  tls:
  - hosts:
    - vision2clean.com
    - www.vision2clean.com
    secretName: vision2clean-tls
  rules:
  - host: vision2clean.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vision2clean-frontend-service
            port:
              number: 80
  - host: www.vision2clean.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vision2clean-frontend-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vision2clean-frontend-hpa
  namespace: vision2clean
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vision2clean-frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80